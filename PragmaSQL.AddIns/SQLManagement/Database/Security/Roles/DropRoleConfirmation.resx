<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAABv1JREFUWEell3ls
        VFUYxW9FRAwmuGLUILgkWIkaYoy4618qEpXFBdGwKBEB474EVNSAGokmbigqYDCkQpHFQmeUsm9VKQhM
        pwulLXsLU+owtiLQz995b147wxSo2uTwhvfuu+d86/1elmvDX/fOruNZHdy1A3q4Xlee4+492uSynbmu
        xrtZel//ZLnt7bJccTTm8nJLXNGBQ25jZb1rbMP2J17yWm9359R7XO78fq42t6+z8FPOCt9xVvyVs6pc
        ZxUz+f0F98bzbIQzrdFavaN3/7OAoVe7a0IPuVlz+zkLPeksOt1ZorybWeJes4bXzRq/M/trHtf5YI7Z
        H++axYZboqinRSd3stAwZ9677KG9/pWQPpe5G/MGuPLc+5xFpjqLF3eBbDyYZXZoHddVPhrXmMWnm9VN
        NNszFIww2zWI6yCLr7jQIh/hkfud5Q105dqzTSJQOzSvv6sreM5ZrOgMs7/HgEUQhsFCSLk2rsQTeKBu
        Ala/alYz3Kz6NrPyrmabnNnvYKN/jc13VvA0Iga4Ou19QhGe5ZDnE8uGqs4QvYLFCyDGxQ2zuS4zOxoD
        Ccv4azrE81Kz3S8g4jSz9Qj4DfzCXoud5Q/1RRzXE4qT3F7wvMg7sdkkMAPiaQA3Hy43a8rkbfXOoUo8
        cIFHbmvBOvbMxxMksMLRak4oWRTz2IYOEOLSxilmf04Gn/pxbyt5oKiesK0/12wNAlaDlez9vZ8T4koL
        hcpFGRuZxsLGuxCA9Yn3wXu+65sOpxt6eA+ufsSs7EyzLbxTcSPrNmSKrHzWI7YVYLl/jUz0q6O5RNVk
        VLOq74NlHdnoDax+C3IQH4egxenkTY1elluUDYvB5mTSlWTzbjR9bbzQJxeWgSVw0DvC5IM4xe16dXG9
        1TiiM1jQcAvEJN7BFyF/2Wzf9cR+b/qmB6n90vY+eSRFgBKu5pP0tUfx3FLuC5AbyShE36VZ9Xe14nYT
        b3Oj1L0SW0+H/EHIKbv60WYHhpntxCNHG9I33T3Yt16uD0quiN+/gr0fp689ctAnloCfQRiE4JpFLpBv
        4nbEY1F4FA8SNJv4o3S0IQigqdTeZLad+/tJyCP1/saNRT65LA8EiFwlF72ZflGTLqBuiVkBz4RAwEJf
        iMIwt7/Ld2RlTSGJYfFuED+M5Xihjuuui82quF+Ju3fewP/7mm29qMXtsn5DknzTJeTNxsyKjGKMiH9K
        Wr+IqwSAQhpd7gOu2skVxcr+A1dA3IfOdjexp99Xn2K2jftbQRkoAalxD8jLqJq/dmWS7/wc19OQAgEi
        FxaAPDjf8gSYm42AKtqlxXrg7jsgv51YkoyV3JOAVHK5XVmvNiu3l96K2/dnktctJetp4wE5Tcgj/zEp
        AL6K9/ye4HmggqSwffTxmusgB7t6UtutWC8BIpf1pYg93Aq5LF8OuTJeAkQuiFyY66OCSmgWUPwNN2vP
        o76p5d1gx+UcLCIBqUkXHDIquTgJduzf3qlY3q6FnIz3yBV3kcvTEvADIXgzGQJUVGvAsD2U3E68sANU
        Xei7PlWAyAW5fstVmeSVb/vlpoyX9SIXiLcX93k+sc3xsXZMMgkpw/zwSAk4lbI7G3L69za8kZp0Qb3L
        9bK+vN8xrZl6X57VQq56l+UheksQ90CAwk03DD2eLMPmRqTNVXIVHEblvFhCFSjrRS6o3pPHq5X1TxdQ
        k9NS7yIXWnG7iA0BCYYcxd9rRMlWvC86RQLkdiyJgqDPi1yJFwgo5PeGS9MFlI5Mr/fW4j6b9zgNJSD6
        hteK93mtmAOhPQdDTugJRi8dm2VJASo3Iah3tVqRc7bbKj2jCqo4sLYMpN2SeGo2gsotNe5KOsU9KSCO
        oaHB3mGUI27vWPaOY5pC5FPFF0QQsRko6Y4VkDzbvdNtNfmynOQNyJV0xwpIut2zHkTGerFvOY6DwYAh
        YaY3kCh+6vUbEVAEgrjLek03sn7t+bTeEj8MTUcQPdYnTo17kHSBgBz2xkB1P3FlzIaMSdkalwpGMz6J
        RNanCtBko/saLHZ8mFmGYcY4uT6o98Dtynosb6DXFDCqJ0ey7FaH0+Q4XqcBskFEnvV4QXEPBMj1tbmZ
        ApZ09+s9aDYpcRd5PnGH/PhDaaDIG8uZXgs4omNyo5JvDSIC63W+lz2TLuDvet96kavZyO1KOhD7DMuH
        ++QnHcsDEZ4nCIdqNfIB1SG3KvnkFXU6JV0UEXvwRPWX3MN6kQdxR0T8a94d9x8+TFI8ka1k8T6vCEkU
        IQmRBCKUrEHGB2XH88S3rOU7MfSYn+3aQ/nVpq+i1hYlP05z1DhUJWHcWfgSh8kETrRJAGHFb/sDRniI
        b7HWqs7/18dpqhg1DHUttU6NUZpkRNQMSkv39ExrtLa5yZzE9H8AO1JXirBupTkAAAAASUVORK5CYII=
</value>
  </data>
</root>